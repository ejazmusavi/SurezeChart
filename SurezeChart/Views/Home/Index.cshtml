<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
<script src="~/microsoft/signalr/dist/webworker/signalr.min.js"></script>

<!--------------------------------------------Buttons Start---------------------------------------------------------------->
<link rel="stylesheet" type="text/css" href="https://code.highcharts.com/css/annotations/popup.css">

<script src="https://code.highcharts.com/stock/highstock.js"></script>
<script src="https://code.highcharts.com/stock/modules/data.js"></script>

<script src="https://code.highcharts.com/stock/modules/drag-panes.js"></script>

<script src="https://code.highcharts.com/stock/indicators/indicators.js"></script>
<script src="https://code.highcharts.com/stock/indicators/bollinger-bands.js"></script>
<script src="https://code.highcharts.com/stock/indicators/ema.js"></script>

<script src="https://code.highcharts.com/stock/modules/annotations-advanced.js"></script>

<script src="https://code.highcharts.com/stock/modules/full-screen.js"></script>
<script src="https://code.highcharts.com/stock/modules/price-indicator.js"></script>
<script src="https://code.highcharts.com/stock/modules/exporting.js"></script>
<script src="https://code.highcharts.com/stock/modules/export-data.js"></script>


<div class="chart-wrapper">
    <div class="highcharts-popup highcharts-popup-indicators">
        <span class="highcharts-close-popup">×</span>

        <button>Add</button>
    </div>

    <div class="" id="container2" style="width:100%; height:600px;"></div>

</div>
<!---------------------------------------------Buttons End----------------------------------------------------------------->

<script>
    var series;
    var series1;
    var series2;

    var lasttime;

    var connection = new signalR.HubConnectionBuilder().withUrl("/ChartHub").build();
    connection.start().then(function () {
        connection.invoke("InitialData");

    }).catch(function (err) {
        return console.error('signalR core connection error', err.toString());
    });

    connection.on('initialChartData', function (data) {
        $.each(data, function (i, v, a) {

            var x = (new Date(v.date)).getTime();; // current time
            series.addPoint([x, v.fhR1], false, false);
            series1.addPoint([x, v.fhR2], false, false);
            series2.addPoint([x, v.toco], false, false);

        });

        data_chart.redraw();
        setInterval(function () {
            connection.invoke("GetData");
        }, 1000);
    });
    connection.on('updatechart', function (data) {
        $.each(data, function (i, v, a) {
            var x = (new Date(v.date)).getTime();; // current time
            series.addPoint([x, v.fhR1], false, false);
            series1.addPoint([x, v.fhR2], false, false);
            series2.addPoint([x, v.toco], false, false);
        });
        data_chart.redraw();
    })

    var data_chart = Highcharts.stockChart('container2', {
        chart: {
            events: {
                load: function () {
                    series = this.series[0];
                    series1 = this.series[1];
                    series2 = this.series[2];
                    let lastValue = this.yAxis[0].dataMax
                    this.yAxis[0].update({
                        tickPositions: [60, 80, 100, 120, 140, 160, 180, 200]
                    });
                    this.yAxis[1].update({
                        tickPositions: [0, 20, 40, 60, 80, 100]
                    });
                }
            },
            zoomType: 'x'
        },
        title: {
            text: 'Central Monitoring Chart'
        },
        subtitle: {
            text: 'Patient Name: ABC      Age: 35Yrs' 
        },
        xAxis: [{
            type: 'datetime',
            tickInterval: 10 * 60 * 1000,
            labels: {
                formatter: function () {
                    //var pt = a.axis.series[0].points[0];
                    //console.log('lbl',pt.options);
                    //var t = point.x;
                    //console.log(t);
                    return Highcharts.dateFormat('%b/%e/%Y %H:%M:%S %P', this.value);
                }
            },
            gridLineWidth: 1,
            height: '60%',
            range: 35 * 60 * 1000,
            minorTickInterval: 10
        },
            {
                type: 'datetime',
                tickInterval: 10 * 60 * 1000,
                labels: {
                    formatter: function () {
                        //var pt = a.axis.series[0].points[0];
                        //console.log('lbl',pt.options);
                        //var t = point.x;
                        //console.log(t);
                        return Highcharts.dateFormat('%b/%e/%Y %H:%M:%S %P', this.value);
                    }
                },
                gridLineWidth: 1,
                range: 35 * 60 * 1000,
                minorTickInterval: 10
            }],
        legend: {
            enabled: false
        },
        plotOptions: {
            area: {
                fillColor: {
                    linearGradient: {
                        x1: 0,
                        y1: 0,
                        x2: 0,
                        y2: 0
                    },
                    stops: [
                        [0, Highcharts.getOptions().colors[0]],
                        [1, Highcharts.color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
                    ]
                },
                marker: {
                    radius: 2
                },
                lineWidth: 1,
                states: {
                    hover: {
                        lineWidth: 1
                    }
                },
                threshold: null
            }
        },
        rangeSelector: {
            buttons: [],
            selected: 1,
            inputEnabled: false
        },
        series: [
            {
            type: 'area',
            name: 'FHR1',
            data: series,
            color: 'red',
            showInNavigator: true,
            gapSize: 5,
            },
            {
            type: 'area',
            name: 'FHR2',
                data: series1,
                showInNavigator: true, 
            },
            {
            type: 'area',
            name: 'TOCO',
            data: series2,
            width: 1,
                yAxis: 1,
                xAxis:1,
                showInNavigator: true, 
        }],
        yAxis: [{
            title: {
                text: ''
            },
            labels: {
                align: 'right',
                x:15
            },
            tickAmount:25,
            height: '60%',
            min: 50,
            max: 210,
            showLastLabel: true,
            endOnTick: false,
            alignTicks: false,
            opposite: false

        },
            {
            title: {
                text: ''
                },
                tickAmount: 25,
            labels: {
                align: 'left',x:5
            },
            top: '70%',
            height: '30%',
            min: 0,
                max: 100,
                showLastLabel: true,
            endOnTick: false,
            alignTicks: false,
            opposite: false

        }]
    });
</script>



